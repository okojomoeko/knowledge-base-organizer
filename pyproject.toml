[project]
name = "knowledge-base-organizer"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = []
requires-python = ">=3.13"
dependencies = [
    "pydantic>=2.11.9",
    "typer>=0.19.2",
    "rich>=13.0.0",
    "pyyaml>=6.0.0",
    "requests>=2.32.5",
    "faiss-cpu>=1.12.0",
]

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "hypothesis>=6.140.2",
    "isort>=6.0.1",
    "licensecheck>=2025.1.0",
    "lizard>=1.18.0",
    "mypy>=1.18.2",
    "nox==2025.02.09",
    "pip-audit>=2.9.0",
    "pre-commit>=4.3.0",
    "pre-commit-hooks>=6.0.0",
    "pyright>=1.1.405",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "ruff>=0.13.2",
    "safety>=3.6.2",
    "types-pyyaml>=6.0.12.20250915",
    "types-requests>=2.32.4.20250913",
]

doc = [
    "furo>=2025.9.25",
    "jupytext>=1.17.3",
    "myst-parser>=4.0.1",
    "nbsphinx>=0.9.7",
    "sphinx>=8.1.3",
    "sphinx-copybutton>=0.5.2",
]

[project.scripts]
knowledge-base-organizer = "knowledge_base_organizer.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
# 開発効率重視: 必須ルールのみ選択
select = [
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "W",      # pycodestyle warnings
    "I",      # isort
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "PIE",    # flake8-pie
    "PT",     # flake8-pytest-style
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    "RUF",    # Ruff-specific rules
]

# より寛容な設定
ignore = [
    "B008",    # Do not perform function calls in argument defaults (typer pattern)
    "FBT001",  # Boolean typed positional argument
    "FBT003",  # Boolean positional value in function call
    "ARG001",  # Unused function argument (CLI placeholders)
    "RET504",  # Unnecessary assignment before return
    "SIM108",  # Use ternary operator (readability preference)
    "PTH123",  # Path.open() instead of open() (compatibility)
    "E501",    # Line too long (handled by formatter)
    "F841",    # Local variable assigned but never used (test variables)
    "B017",    # pytest.raises(Exception) is acceptable in tests
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",    # Use of assert detected (pytest uses asserts)
    "ARG001",  # Unused function argument (fixtures)
    "PTH",     # Path rules (test files can use string paths)
    "F841",    # Unused variables in tests (common pattern)
    "B017",    # pytest.raises(Exception) is acceptable
    "E501",    # Long lines in test data
]
"experiments/**/*.py" = [
    "T201",    # print() allowed in experiments
    "S101",    # assert allowed in experiments
    "E501",    # Long lines allowed in experiments
    "F841",    # Unused variables allowed in experiments
]

[tool.mypy]
python_version = "3.13"
disallow_untyped_defs = true
strict = true
warn_return_any = true
warn_unused_configs = true
